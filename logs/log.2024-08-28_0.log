INFO  24-08-28 22:51:56[main] [ExprmntApplication:50] - Starting ExprmntApplication using Java 17.0.9 with PID 9851 (/Users/test/Desktop/test/exprmnt/build/classes/java/main started by test in /Users/test/Desktop/test/exprmnt)
INFO  24-08-28 22:51:56[main] [ExprmntApplication:654] - No active profile set, falling back to 1 default profile: "default"
INFO  24-08-28 22:51:57[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 22:51:57[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-08-28 22:51:57[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  24-08-28 22:51:57[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 58 ms. Found 1 JPA repository interface.
INFO  24-08-28 22:51:57[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 22:51:57[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
INFO  24-08-28 22:51:57[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestRdbRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
INFO  24-08-28 22:51:57[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 13 ms. Found 1 MongoDB repository interface.
INFO  24-08-28 22:51:58[main] [TomcatWebServer:111] - Tomcat initialized with port 8080 (http)
INFO  24-08-28 22:51:58[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 22:51:58[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-08-28 22:51:58[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.28]
INFO  24-08-28 22:51:58[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-08-28 22:51:58[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1476 ms
INFO  24-08-28 22:51:58[main] [HikariDataSource:109] - HikariPool-1 - Starting...
INFO  24-08-28 22:51:58[main] [HikariPool:554] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2e7af36e
INFO  24-08-28 22:51:58[main] [HikariDataSource:122] - HikariPool-1 - Start completed.
INFO  24-08-28 22:51:58[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-08-28 22:51:58[main] [Version:44] - HHH000412: Hibernate ORM core version 6.5.2.Final
INFO  24-08-28 22:51:58[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6b2aafbc
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6b2aafbc
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@3b57dba4
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3b57dba4
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@35f7969d
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35f7969d
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35f7969d
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3404e5c4
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3404e5c4
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@47569167
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@47569167
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@42d9e8d2
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@42d9e8d2
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4b93dd6a
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4b93dd6a
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@582a3b19
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@582a3b19
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2b0454d2
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2616b618
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@359ceb13
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@359ceb13
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@103c97ff
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7d25913
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@c14e5a5
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@16f15ae9
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6206b4a7
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@77896335
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5c1b89ac
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@40a1b6d4
DEBUG 24-08-28 22:51:58[main] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@175581eb
INFO  24-08-28 22:51:59[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 24-08-28 22:51:59[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@365bfc5f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a7e799e)
DEBUG 24-08-28 22:51:59[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@37a3ec27) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@283baa39)
DEBUG 24-08-28 22:51:59[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@416b1265) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2830315f)
DEBUG 24-08-28 22:51:59[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@da22aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@75452aea)
DEBUG 24-08-28 22:51:59[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6c24f61d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4537880f)
DEBUG 24-08-28 22:51:59[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@14292d71) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@48e74764)
DEBUG 24-08-28 22:51:59[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@338d47b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7a3643e3)
DEBUG 24-08-28 22:51:59[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2729bb71) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55071497)
DEBUG 24-08-28 22:51:59[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@10d98940) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58b8f9e3)
DEBUG 24-08-28 22:51:59[main] [JdbcTypeRegistry:74] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-08-28 22:51:59[main] [JdbcTypeRegistry:74] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-08-28 22:51:59[main] [JdbcTypeRegistry:74] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-08-28 22:51:59[main] [JdbcTypeRegistry:74] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 22:51:59[main] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 22:51:59[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@55e42684
DEBUG 24-08-28 22:51:59[main] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@103c97ff`
DEBUG 24-08-28 22:51:59[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 22:51:59[main] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 22:51:59[main] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 22:51:59[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 22:51:59[main] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 22:51:59[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 22:51:59[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 22:51:59[main] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 22:51:59[main] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 22:51:59[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 22:51:59[main] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 22:51:59[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 22:51:59[main] [TypeConfiguration$Scope:196] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@604c7e9b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@19d27c27]
INFO  24-08-28 22:52:00[main] [JtaPlatformInitiator:59] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-08-28 22:52:00[main] [TypeConfiguration$Scope:208] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@604c7e9b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4cefa0be]
TRACE 24-08-28 22:52:00[main] [TypeConfiguration$Scope:272] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4cefa0be] for TypeConfiguration
INFO  24-08-28 22:52:00[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  24-08-28 22:52:00[main] [client:71] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.1.1"}, "platform": "Java/Oracle Corporation/17.0.9+11-LTS-201"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5d67bf4d, com.mongodb.Jep395RecordCodecProvider@31de8099, com.mongodb.KotlinCodecProvider@40d04cf8]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
INFO  24-08-28 22:52:00[cluster-ClusterId{value='66cf2b80899a473f5c694888', description='null'}-localhost:27017] [cluster:71] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25182373}
WARN  24-08-28 22:52:00[main] [JpaBaseConfiguration$JpaWebConfiguration:236] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-08-28 22:52:01[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 22:52:01[main] [TomcatWebServer:243] - Tomcat started on port 8080 (http) with context path '/'
INFO  24-08-28 22:52:01[main] [ExprmntApplication:56] - Started ExprmntApplication in 5.24 seconds (process running for 5.751)
INFO  24-08-28 22:52:22[http-nio-8080-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-08-28 22:52:22[http-nio-8080-exec-2] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-08-28 22:52:22[http-nio-8080-exec-2] [DispatcherServlet:554] - Completed initialization in 1 ms
DEBUG 24-08-28 22:52:22[http-nio-8080-exec-2] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(162020401<open>)] for JPA transaction
DEBUG 24-08-28 22:52:22[http-nio-8080-exec-2] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 22:52:22[http-nio-8080-exec-2] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@a50cb26]
DEBUG 24-08-28 22:52:23[http-nio-8080-exec-2] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 22:52:23[http-nio-8080-exec-2] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(162020401<open>)]
DEBUG 24-08-28 22:52:23[http-nio-8080-exec-2] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
INFO  24-08-28 22:53:57[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-08-28 22:53:57[SpringApplicationShutdownHook] [TypeConfiguration$Scope:278] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4cefa0be] for TypeConfiguration
DEBUG 24-08-28 22:53:57[SpringApplicationShutdownHook] [TypeConfiguration$Scope:575] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@293f079e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4cefa0be]
INFO  24-08-28 22:53:57[SpringApplicationShutdownHook] [HikariDataSource:349] - HikariPool-1 - Shutdown initiated...
INFO  24-08-28 22:53:57[SpringApplicationShutdownHook] [HikariDataSource:351] - HikariPool-1 - Shutdown completed.
INFO  24-08-28 22:54:00[main] [ExprmntApplication:50] - Starting ExprmntApplication using Java 17.0.9 with PID 9881 (/Users/test/Desktop/test/exprmnt/build/classes/java/main started by test in /Users/test/Desktop/test/exprmnt)
INFO  24-08-28 22:54:00[main] [ExprmntApplication:654] - No active profile set, falling back to 1 default profile: "default"
INFO  24-08-28 22:54:01[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 22:54:01[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-08-28 22:54:01[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  24-08-28 22:54:01[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 60 ms. Found 1 JPA repository interface.
INFO  24-08-28 22:54:01[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 22:54:01[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
INFO  24-08-28 22:54:01[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestRdbRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
INFO  24-08-28 22:54:01[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 12 ms. Found 1 MongoDB repository interface.
INFO  24-08-28 22:54:01[main] [TomcatWebServer:111] - Tomcat initialized with port 8080 (http)
INFO  24-08-28 22:54:01[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 22:54:01[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-08-28 22:54:01[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.28]
INFO  24-08-28 22:54:01[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-08-28 22:54:01[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1388 ms
INFO  24-08-28 22:54:02[main] [HikariDataSource:109] - HikariPool-1 - Starting...
INFO  24-08-28 22:54:02[main] [HikariPool:554] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@740fefc6
INFO  24-08-28 22:54:02[main] [HikariDataSource:122] - HikariPool-1 - Start completed.
INFO  24-08-28 22:54:02[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-08-28 22:54:02[main] [Version:44] - HHH000412: Hibernate ORM core version 6.5.2.Final
INFO  24-08-28 22:54:02[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6b2aafbc
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3b57dba4
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@35f7969d
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@3404e5c4
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3404e5c4
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@47569167
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@47569167
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@47569167
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@42d9e8d2
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@42d9e8d2
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4b93dd6a
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4b93dd6a
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@582a3b19
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@582a3b19
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2b0454d2
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2b0454d2
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@2616b618
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2616b618
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@73bb573d
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7ac058a0
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@5bf4764d
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5bf4764d
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@c14e5a5
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@16f15ae9
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6206b4a7
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@77896335
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5c1b89ac
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@40a1b6d4
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@175581eb
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2b79c8ff
DEBUG 24-08-28 22:54:02[main] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2baf72d5
INFO  24-08-28 22:54:02[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 24-08-28 22:54:03[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@37a3ec27) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@283baa39)
DEBUG 24-08-28 22:54:03[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@416b1265) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2830315f)
DEBUG 24-08-28 22:54:03[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@da22aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@75452aea)
DEBUG 24-08-28 22:54:03[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6c24f61d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4537880f)
DEBUG 24-08-28 22:54:03[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@14292d71) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@48e74764)
DEBUG 24-08-28 22:54:03[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@338d47b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7a3643e3)
DEBUG 24-08-28 22:54:03[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2729bb71) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55071497)
DEBUG 24-08-28 22:54:03[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@10d98940) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58b8f9e3)
DEBUG 24-08-28 22:54:03[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32a033b6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5f6e2ad9)
DEBUG 24-08-28 22:54:03[main] [JdbcTypeRegistry:74] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-08-28 22:54:03[main] [JdbcTypeRegistry:74] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-08-28 22:54:03[main] [JdbcTypeRegistry:74] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-08-28 22:54:03[main] [JdbcTypeRegistry:74] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 22:54:03[main] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 22:54:03[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@528e5e38
DEBUG 24-08-28 22:54:03[main] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@c14e5a5`
DEBUG 24-08-28 22:54:03[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 22:54:03[main] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 22:54:03[main] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 22:54:03[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 22:54:03[main] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 22:54:03[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 22:54:03[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 22:54:03[main] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 22:54:03[main] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 22:54:03[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 22:54:03[main] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 22:54:03[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 22:54:03[main] [TypeConfiguration$Scope:196] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6181bc4a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@70485aa]
INFO  24-08-28 22:54:03[main] [JtaPlatformInitiator:59] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-08-28 22:54:03[main] [TypeConfiguration$Scope:208] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6181bc4a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6c4786af]
TRACE 24-08-28 22:54:03[main] [TypeConfiguration$Scope:272] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6c4786af] for TypeConfiguration
INFO  24-08-28 22:54:03[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  24-08-28 22:54:04[main] [client:71] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.1.1"}, "platform": "Java/Oracle Corporation/17.0.9+11-LTS-201"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@222eda8a, com.mongodb.Jep395RecordCodecProvider@3331800f, com.mongodb.KotlinCodecProvider@c414eb3]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
INFO  24-08-28 22:54:04[cluster-ClusterId{value='66cf2bfc47e4017136890af9', description='null'}-localhost:27017] [cluster:71] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=27866783}
WARN  24-08-28 22:54:04[main] [JpaBaseConfiguration$JpaWebConfiguration:236] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-08-28 22:54:04[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 22:54:04[main] [TomcatWebServer:243] - Tomcat started on port 8080 (http) with context path '/'
INFO  24-08-28 22:54:04[main] [ExprmntApplication:56] - Started ExprmntApplication in 4.946 seconds (process running for 5.398)
INFO  24-08-28 22:54:09[http-nio-8080-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-08-28 22:54:09[http-nio-8080-exec-2] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-08-28 22:54:09[http-nio-8080-exec-2] [DispatcherServlet:554] - Completed initialization in 1 ms
DEBUG 24-08-28 22:54:09[http-nio-8080-exec-2] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(2117125996<open>)] for JPA transaction
DEBUG 24-08-28 22:54:09[http-nio-8080-exec-2] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 22:54:09[http-nio-8080-exec-2] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1e48132c]
DEBUG 24-08-28 22:54:10[http-nio-8080-exec-2] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 22:54:10[http-nio-8080-exec-2] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(2117125996<open>)]
DEBUG 24-08-28 22:54:10[http-nio-8080-exec-2] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
INFO  24-08-28 22:55:52[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-08-28 22:55:52[SpringApplicationShutdownHook] [TypeConfiguration$Scope:278] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6c4786af] for TypeConfiguration
DEBUG 24-08-28 22:55:52[SpringApplicationShutdownHook] [TypeConfiguration$Scope:575] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@54b4d31d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6c4786af]
INFO  24-08-28 22:55:52[SpringApplicationShutdownHook] [HikariDataSource:349] - HikariPool-1 - Shutdown initiated...
INFO  24-08-28 22:55:52[SpringApplicationShutdownHook] [HikariDataSource:351] - HikariPool-1 - Shutdown completed.
INFO  24-08-28 22:56:20[main] [ExprmntApplication:50] - Starting ExprmntApplication using Java 17.0.9 with PID 9913 (/Users/test/Desktop/test/exprmnt/build/classes/java/main started by test in /Users/test/Desktop/test/exprmnt)
INFO  24-08-28 22:56:20[main] [ExprmntApplication:654] - No active profile set, falling back to 1 default profile: "default"
INFO  24-08-28 22:56:21[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 22:56:21[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-08-28 22:56:21[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  24-08-28 22:56:21[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 54 ms. Found 1 JPA repository interface.
INFO  24-08-28 22:56:21[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 22:56:21[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
INFO  24-08-28 22:56:21[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestRdbRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
INFO  24-08-28 22:56:21[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 11 ms. Found 1 MongoDB repository interface.
INFO  24-08-28 22:56:21[main] [TomcatWebServer:111] - Tomcat initialized with port 8080 (http)
INFO  24-08-28 22:56:21[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 22:56:21[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-08-28 22:56:21[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.28]
INFO  24-08-28 22:56:21[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-08-28 22:56:21[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1551 ms
INFO  24-08-28 22:56:22[main] [HikariDataSource:109] - HikariPool-1 - Starting...
INFO  24-08-28 22:56:22[main] [HikariPool:554] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@335f5c69
INFO  24-08-28 22:56:22[main] [HikariDataSource:122] - HikariPool-1 - Start completed.
INFO  24-08-28 22:56:22[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-08-28 22:56:22[main] [Version:44] - HHH000412: Hibernate ORM core version 6.5.2.Final
INFO  24-08-28 22:56:22[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6b2aafbc
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6b2aafbc
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3b57dba4
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@573aeab2
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@573aeab2
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@71789580
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@23ee2ccf
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@165614f5
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6e685e6c
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5b0902b4
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@9d3d54e
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2f04993d
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@333398f
DEBUG 24-08-28 22:56:22[main] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@103c97ff
INFO  24-08-28 22:56:22[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 24-08-28 22:56:23[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6463da36) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a4b288a)
DEBUG 24-08-28 22:56:23[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c6ac73c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29892a77)
DEBUG 24-08-28 22:56:23[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5341e71a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@405d8a80)
DEBUG 24-08-28 22:56:23[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ac4e690) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6afeaf2d)
DEBUG 24-08-28 22:56:23[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@365bfc5f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a7e799e)
DEBUG 24-08-28 22:56:23[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37a3ec27) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@283baa39)
DEBUG 24-08-28 22:56:23[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@416b1265) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2830315f)
DEBUG 24-08-28 22:56:23[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@da22aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@75452aea)
DEBUG 24-08-28 22:56:23[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c24f61d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4537880f)
DEBUG 24-08-28 22:56:23[main] [JdbcTypeRegistry:74] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-08-28 22:56:23[main] [JdbcTypeRegistry:74] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-08-28 22:56:23[main] [JdbcTypeRegistry:74] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-08-28 22:56:23[main] [JdbcTypeRegistry:74] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 22:56:23[main] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 22:56:23[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@344f9467
DEBUG 24-08-28 22:56:23[main] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@71789580`
DEBUG 24-08-28 22:56:23[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 22:56:23[main] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 22:56:23[main] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 22:56:23[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 22:56:23[main] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 22:56:23[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 22:56:23[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 22:56:23[main] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 22:56:23[main] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 22:56:23[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 22:56:23[main] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 22:56:23[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 22:56:23[main] [TypeConfiguration$Scope:196] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2211b44f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6c830ebd]
INFO  24-08-28 22:56:23[main] [JtaPlatformInitiator:59] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-08-28 22:56:23[main] [TypeConfiguration$Scope:208] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2211b44f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@66a99584]
TRACE 24-08-28 22:56:23[main] [TypeConfiguration$Scope:272] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@66a99584] for TypeConfiguration
INFO  24-08-28 22:56:23[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  24-08-28 22:56:24[main] [client:71] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.1.1"}, "platform": "Java/Oracle Corporation/17.0.9+11-LTS-201"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@267b678f, com.mongodb.Jep395RecordCodecProvider@4803bf73, com.mongodb.KotlinCodecProvider@13731ff4]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
INFO  24-08-28 22:56:24[cluster-ClusterId{value='66cf2c88a930000b37653cd4', description='null'}-localhost:27017] [cluster:71] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=29058208}
WARN  24-08-28 22:56:24[main] [JpaBaseConfiguration$JpaWebConfiguration:236] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-08-28 22:56:25[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 22:56:25[main] [TomcatWebServer:243] - Tomcat started on port 8080 (http) with context path '/'
INFO  24-08-28 22:56:25[main] [ExprmntApplication:56] - Started ExprmntApplication in 5.446 seconds (process running for 5.934)
INFO  24-08-28 22:57:46[main] [ExprmntApplication:50] - Starting ExprmntApplication using Java 17.0.9 with PID 9950 (/Users/test/Desktop/test/exprmnt/build/classes/java/main started by test in /Users/test/Desktop/test/exprmnt)
INFO  24-08-28 22:57:46[main] [ExprmntApplication:654] - No active profile set, falling back to 1 default profile: "default"
INFO  24-08-28 22:57:46[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 22:57:47[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-08-28 22:57:47[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  24-08-28 22:57:47[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 74 ms. Found 1 JPA repository interface.
INFO  24-08-28 22:57:47[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 22:57:47[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
INFO  24-08-28 22:57:47[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestRdbRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
INFO  24-08-28 22:57:47[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 8 ms. Found 1 MongoDB repository interface.
INFO  24-08-28 22:57:47[main] [TomcatWebServer:111] - Tomcat initialized with port 8080 (http)
INFO  24-08-28 22:57:47[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 22:57:47[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-08-28 22:57:47[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.28]
INFO  24-08-28 22:57:47[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-08-28 22:57:47[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1598 ms
INFO  24-08-28 22:57:48[main] [HikariDataSource:109] - HikariPool-1 - Starting...
INFO  24-08-28 22:57:48[main] [HikariPool:554] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4a058df8
INFO  24-08-28 22:57:48[main] [HikariDataSource:122] - HikariPool-1 - Start completed.
INFO  24-08-28 22:57:48[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-08-28 22:57:48[main] [Version:44] - HHH000412: Hibernate ORM core version 6.5.2.Final
INFO  24-08-28 22:57:48[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6b2aafbc
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3b57dba4
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3b57dba4
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@35f7969d
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@35f7969d
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3404e5c4
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3404e5c4
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@47569167
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@47569167
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@42d9e8d2
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@42d9e8d2
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4b93dd6a
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@582a3b19
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@4dd2ef54
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4dd2ef54
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@2f04993d
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@333398f
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@103c97ff
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7d25913
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@c14e5a5
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@16f15ae9
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6206b4a7
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@77896335
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5c1b89ac
INFO  24-08-28 22:57:48[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 24-08-28 22:57:48[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ac4e690) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6afeaf2d)
DEBUG 24-08-28 22:57:48[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@365bfc5f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a7e799e)
DEBUG 24-08-28 22:57:48[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@37a3ec27) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@283baa39)
DEBUG 24-08-28 22:57:48[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@416b1265) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2830315f)
DEBUG 24-08-28 22:57:48[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@da22aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@75452aea)
DEBUG 24-08-28 22:57:48[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6c24f61d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4537880f)
DEBUG 24-08-28 22:57:48[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14292d71) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@48e74764)
DEBUG 24-08-28 22:57:48[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@338d47b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7a3643e3)
DEBUG 24-08-28 22:57:48[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2729bb71) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55071497)
DEBUG 24-08-28 22:57:48[main] [JdbcTypeRegistry:74] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-08-28 22:57:48[main] [JdbcTypeRegistry:74] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-08-28 22:57:48[main] [JdbcTypeRegistry:74] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-08-28 22:57:48[main] [JdbcTypeRegistry:74] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 22:57:48[main] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@3feebf9c
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2f04993d`
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 22:57:48[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 22:57:48[main] [TypeConfiguration$Scope:196] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c2a903f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7d537616]
INFO  24-08-28 22:57:49[main] [JtaPlatformInitiator:59] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-08-28 22:57:49[main] [TypeConfiguration$Scope:208] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c2a903f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2336d3f]
TRACE 24-08-28 22:57:49[main] [TypeConfiguration$Scope:272] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2336d3f] for TypeConfiguration
INFO  24-08-28 22:57:49[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  24-08-28 22:57:50[main] [client:71] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.1.1"}, "platform": "Java/Oracle Corporation/17.0.9+11-LTS-201"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3f78a5ed, com.mongodb.Jep395RecordCodecProvider@630e5010, com.mongodb.KotlinCodecProvider@10b5ff4d]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
INFO  24-08-28 22:57:50[cluster-ClusterId{value='66cf2cde5a31e949c2593bff', description='null'}-localhost:27017] [cluster:71] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=34759453}
WARN  24-08-28 22:57:50[main] [JpaBaseConfiguration$JpaWebConfiguration:236] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-08-28 22:57:50[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 22:57:51[main] [TomcatWebServer:243] - Tomcat started on port 8080 (http) with context path '/'
INFO  24-08-28 22:57:51[main] [ExprmntApplication:56] - Started ExprmntApplication in 5.474 seconds (process running for 6.042)
INFO  24-08-28 22:58:05[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-08-28 22:58:05[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-08-28 22:58:05[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 1 ms
DEBUG 24-08-28 22:58:11[http-nio-8080-exec-1] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(206723031<open>)] for JPA transaction
DEBUG 24-08-28 22:58:11[http-nio-8080-exec-1] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 22:58:11[http-nio-8080-exec-1] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@48497e37]
DEBUG 24-08-28 22:58:57[http-nio-8080-exec-1] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 22:58:57[http-nio-8080-exec-1] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(206723031<open>)]
DEBUG 24-08-28 22:58:57[http-nio-8080-exec-1] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-08-28 22:59:21[http-nio-8080-exec-1] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(206723031<open>)] for JPA transaction
DEBUG 24-08-28 22:59:21[http-nio-8080-exec-1] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 22:59:21[http-nio-8080-exec-1] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@20c24614]
DEBUG 24-08-28 22:59:21[http-nio-8080-exec-1] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 22:59:21[http-nio-8080-exec-1] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(206723031<open>)]
DEBUG 24-08-28 22:59:21[http-nio-8080-exec-1] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-08-28 23:00:24[http-nio-8080-exec-3] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1018812328<open>)] for JPA transaction
DEBUG 24-08-28 23:00:24[http-nio-8080-exec-3] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:00:24[http-nio-8080-exec-3] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@22406940]
INFO  24-08-28 23:00:57[main] [ExprmntApplication:50] - Starting ExprmntApplication using Java 17.0.9 with PID 10006 (/Users/test/Desktop/test/exprmnt/build/classes/java/main started by test in /Users/test/Desktop/test/exprmnt)
INFO  24-08-28 23:00:57[main] [ExprmntApplication:654] - No active profile set, falling back to 1 default profile: "default"
INFO  24-08-28 23:00:57[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 23:00:57[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-08-28 23:00:57[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  24-08-28 23:00:57[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 49 ms. Found 1 JPA repository interface.
INFO  24-08-28 23:00:57[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 23:00:57[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
INFO  24-08-28 23:00:58[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestRdbRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
INFO  24-08-28 23:00:58[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
INFO  24-08-28 23:00:58[main] [TomcatWebServer:111] - Tomcat initialized with port 8080 (http)
INFO  24-08-28 23:00:58[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 23:00:58[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-08-28 23:00:58[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.28]
INFO  24-08-28 23:00:58[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-08-28 23:00:58[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1445 ms
INFO  24-08-28 23:00:58[main] [HikariDataSource:109] - HikariPool-1 - Starting...
INFO  24-08-28 23:00:59[main] [HikariPool:554] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@335f5c69
INFO  24-08-28 23:00:59[main] [HikariDataSource:122] - HikariPool-1 - Start completed.
INFO  24-08-28 23:00:59[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-08-28 23:00:59[main] [Version:44] - HHH000412: Hibernate ORM core version 6.5.2.Final
INFO  24-08-28 23:00:59[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6b2aafbc
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6b2aafbc
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3b57dba4
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@573aeab2
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@573aeab2
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@71789580
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@23ee2ccf
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@165614f5
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6e685e6c
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5b0902b4
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@9d3d54e
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2f04993d
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@333398f
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@103c97ff
INFO  24-08-28 23:00:59[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 24-08-28 23:00:59[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6463da36) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a4b288a)
DEBUG 24-08-28 23:00:59[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c6ac73c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29892a77)
DEBUG 24-08-28 23:00:59[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5341e71a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@405d8a80)
DEBUG 24-08-28 23:00:59[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ac4e690) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6afeaf2d)
DEBUG 24-08-28 23:00:59[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@365bfc5f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a7e799e)
DEBUG 24-08-28 23:00:59[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37a3ec27) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@283baa39)
DEBUG 24-08-28 23:00:59[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@416b1265) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2830315f)
DEBUG 24-08-28 23:00:59[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@da22aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@75452aea)
DEBUG 24-08-28 23:00:59[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c24f61d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4537880f)
DEBUG 24-08-28 23:00:59[main] [JdbcTypeRegistry:74] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-08-28 23:00:59[main] [JdbcTypeRegistry:74] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-08-28 23:00:59[main] [JdbcTypeRegistry:74] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-08-28 23:00:59[main] [JdbcTypeRegistry:74] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 23:00:59[main] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@344f9467
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@71789580`
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:00:59[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:00:59[main] [TypeConfiguration$Scope:196] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2211b44f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6c830ebd]
INFO  24-08-28 23:01:00[main] [JtaPlatformInitiator:59] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-08-28 23:01:00[main] [TypeConfiguration$Scope:208] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2211b44f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@66a99584]
TRACE 24-08-28 23:01:00[main] [TypeConfiguration$Scope:272] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@66a99584] for TypeConfiguration
INFO  24-08-28 23:01:00[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  24-08-28 23:01:01[main] [client:71] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.1.1"}, "platform": "Java/Oracle Corporation/17.0.9+11-LTS-201"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@267b678f, com.mongodb.Jep395RecordCodecProvider@4803bf73, com.mongodb.KotlinCodecProvider@13731ff4]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
INFO  24-08-28 23:01:01[cluster-ClusterId{value='66cf2d9cb9cca7182a7231f3', description='null'}-localhost:27017] [cluster:71] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25599996}
WARN  24-08-28 23:01:01[main] [JpaBaseConfiguration$JpaWebConfiguration:236] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-08-28 23:01:01[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 23:01:01[main] [TomcatWebServer:243] - Tomcat started on port 8080 (http) with context path '/'
INFO  24-08-28 23:01:01[main] [ExprmntApplication:56] - Started ExprmntApplication in 5.004 seconds (process running for 5.516)
INFO  24-08-28 23:01:10[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-08-28 23:01:10[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-08-28 23:01:10[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 1 ms
DEBUG 24-08-28 23:01:10[http-nio-8080-exec-1] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(396951054<open>)] for JPA transaction
DEBUG 24-08-28 23:01:10[http-nio-8080-exec-1] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:01:10[http-nio-8080-exec-1] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1f4d5576]
DEBUG 24-08-28 23:01:11[http-nio-8080-exec-1] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:01:11[http-nio-8080-exec-1] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(396951054<open>)]
DEBUG 24-08-28 23:01:11[http-nio-8080-exec-1] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
INFO  24-08-28 23:01:44[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-08-28 23:01:44[SpringApplicationShutdownHook] [TypeConfiguration$Scope:278] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@66a99584] for TypeConfiguration
DEBUG 24-08-28 23:01:44[SpringApplicationShutdownHook] [TypeConfiguration$Scope:575] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6691799] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@66a99584]
INFO  24-08-28 23:01:44[SpringApplicationShutdownHook] [HikariDataSource:349] - HikariPool-1 - Shutdown initiated...
INFO  24-08-28 23:01:44[SpringApplicationShutdownHook] [HikariDataSource:351] - HikariPool-1 - Shutdown completed.
INFO  24-08-28 23:01:57[main] [ExprmntApplication:50] - Starting ExprmntApplication using Java 17.0.9 with PID 10025 (/Users/test/Desktop/test/exprmnt/build/classes/java/main started by test in /Users/test/Desktop/test/exprmnt)
INFO  24-08-28 23:01:57[main] [ExprmntApplication:654] - No active profile set, falling back to 1 default profile: "default"
INFO  24-08-28 23:01:58[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 23:01:58[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-08-28 23:01:58[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  24-08-28 23:01:58[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 65 ms. Found 1 JPA repository interface.
INFO  24-08-28 23:01:58[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 23:01:58[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
INFO  24-08-28 23:01:58[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestRdbRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
INFO  24-08-28 23:01:58[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 11 ms. Found 1 MongoDB repository interface.
INFO  24-08-28 23:01:58[main] [TomcatWebServer:111] - Tomcat initialized with port 8080 (http)
INFO  24-08-28 23:01:58[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 23:01:58[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-08-28 23:01:58[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.28]
INFO  24-08-28 23:01:58[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-08-28 23:01:58[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1542 ms
INFO  24-08-28 23:01:59[main] [HikariDataSource:109] - HikariPool-1 - Starting...
INFO  24-08-28 23:01:59[main] [HikariPool:554] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@794f11cd
INFO  24-08-28 23:01:59[main] [HikariDataSource:122] - HikariPool-1 - Start completed.
INFO  24-08-28 23:01:59[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-08-28 23:01:59[main] [Version:44] - HHH000412: Hibernate ORM core version 6.5.2.Final
INFO  24-08-28 23:01:59[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@342beaf6
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@222acad
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@96abc76
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@96abc76
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@3a3883c4
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1537e43
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@573aeab2
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1304e0d7
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6ddc67d0
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7767bd4e
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7708b66a
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@433ef204
DEBUG 24-08-28 23:01:59[main] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4dd2ef54
INFO  24-08-28 23:01:59[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 24-08-28 23:02:00[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5ba184fc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4cfc0c48)
DEBUG 24-08-28 23:02:00[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@59d5c537) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5464b97c)
DEBUG 24-08-28 23:02:00[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3355168) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2f07930a)
DEBUG 24-08-28 23:02:00[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@580c17a0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29d2fa84)
DEBUG 24-08-28 23:02:00[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4540c7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13c90c06)
DEBUG 24-08-28 23:02:00[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2bc0b8c8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@15f861ee)
DEBUG 24-08-28 23:02:00[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3f1158ee) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6463da36)
DEBUG 24-08-28 23:02:00[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a4b288a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c6ac73c)
DEBUG 24-08-28 23:02:00[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29892a77) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5341e71a)
DEBUG 24-08-28 23:02:00[main] [JdbcTypeRegistry:74] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-08-28 23:02:00[main] [JdbcTypeRegistry:74] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-08-28 23:02:00[main] [JdbcTypeRegistry:74] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-08-28 23:02:00[main] [JdbcTypeRegistry:74] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 23:02:00[main] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 23:02:00[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@1a7d0c9f
DEBUG 24-08-28 23:02:00[main] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@3a3883c4`
DEBUG 24-08-28 23:02:00[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:02:00[main] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:02:00[main] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:02:00[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:02:00[main] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:02:00[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:02:00[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:02:00[main] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:02:00[main] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:02:00[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:02:00[main] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:02:00[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:02:00[main] [TypeConfiguration$Scope:196] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46524ebe] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1de85972]
INFO  24-08-28 23:02:00[main] [JtaPlatformInitiator:59] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-08-28 23:02:00[main] [TypeConfiguration$Scope:208] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46524ebe] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2114eb1a]
TRACE 24-08-28 23:02:00[main] [TypeConfiguration$Scope:272] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2114eb1a] for TypeConfiguration
INFO  24-08-28 23:02:00[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  24-08-28 23:02:01[main] [client:71] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.1.1"}, "platform": "Java/Oracle Corporation/17.0.9+11-LTS-201"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@633cad4d, com.mongodb.Jep395RecordCodecProvider@15c3585, com.mongodb.KotlinCodecProvider@5b86f4cb]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
INFO  24-08-28 23:02:01[cluster-ClusterId{value='66cf2dd9799c8a64f8fa6191', description='null'}-localhost:27017] [cluster:71] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21120318}
WARN  24-08-28 23:02:01[main] [JpaBaseConfiguration$JpaWebConfiguration:236] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-08-28 23:02:01[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 23:02:01[main] [TomcatWebServer:243] - Tomcat started on port 8080 (http) with context path '/'
INFO  24-08-28 23:02:01[main] [ExprmntApplication:56] - Started ExprmntApplication in 5.143 seconds (process running for 5.617)
INFO  24-08-28 23:02:19[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-08-28 23:02:19[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-08-28 23:02:19[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 1 ms
DEBUG 24-08-28 23:02:23[http-nio-8080-exec-1] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1021411986<open>)] for JPA transaction
DEBUG 24-08-28 23:02:23[http-nio-8080-exec-1] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:02:23[http-nio-8080-exec-1] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@711e7e70]
DEBUG 24-08-28 23:03:01[http-nio-8080-exec-1] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:03:01[http-nio-8080-exec-1] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(1021411986<open>)]
DEBUG 24-08-28 23:03:01[http-nio-8080-exec-1] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
INFO  24-08-28 23:07:47[main] [ExprmntApplication:50] - Starting ExprmntApplication using Java 17.0.9 with PID 10082 (/Users/test/Desktop/test/exprmnt/build/classes/java/main started by test in /Users/test/Desktop/test/exprmnt)
INFO  24-08-28 23:07:47[main] [ExprmntApplication:654] - No active profile set, falling back to 1 default profile: "default"
INFO  24-08-28 23:07:48[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 23:07:48[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-08-28 23:07:48[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  24-08-28 23:07:48[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 74 ms. Found 1 JPA repository interface.
INFO  24-08-28 23:07:48[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 23:07:48[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
INFO  24-08-28 23:07:48[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestRdbRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
INFO  24-08-28 23:07:48[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 8 ms. Found 1 MongoDB repository interface.
INFO  24-08-28 23:07:49[main] [TomcatWebServer:111] - Tomcat initialized with port 8080 (http)
INFO  24-08-28 23:07:49[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 23:07:49[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-08-28 23:07:49[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.28]
INFO  24-08-28 23:07:49[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-08-28 23:07:49[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1553 ms
INFO  24-08-28 23:07:49[main] [HikariDataSource:109] - HikariPool-1 - Starting...
INFO  24-08-28 23:07:49[main] [HikariPool:554] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d6751e3
INFO  24-08-28 23:07:49[main] [HikariDataSource:122] - HikariPool-1 - Start completed.
INFO  24-08-28 23:07:49[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-08-28 23:07:49[main] [Version:44] - HHH000412: Hibernate ORM core version 6.5.2.Final
INFO  24-08-28 23:07:49[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6b2aafbc
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6b2aafbc
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@3b57dba4
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3b57dba4
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@35f7969d
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3404e5c4
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@6ddc67d0
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6ddc67d0
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@165614f5
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6e685e6c
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5b0902b4
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@9d3d54e
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2f04993d
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@333398f
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@103c97ff
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7d25913
DEBUG 24-08-28 23:07:49[main] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@c14e5a5
INFO  24-08-28 23:07:50[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 24-08-28 23:07:50[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c6ac73c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29892a77)
DEBUG 24-08-28 23:07:50[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5341e71a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@405d8a80)
DEBUG 24-08-28 23:07:50[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ac4e690) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6afeaf2d)
DEBUG 24-08-28 23:07:50[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@365bfc5f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a7e799e)
DEBUG 24-08-28 23:07:50[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37a3ec27) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@283baa39)
DEBUG 24-08-28 23:07:50[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@416b1265) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2830315f)
DEBUG 24-08-28 23:07:50[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@da22aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@75452aea)
DEBUG 24-08-28 23:07:50[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c24f61d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4537880f)
DEBUG 24-08-28 23:07:50[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@14292d71) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@48e74764)
DEBUG 24-08-28 23:07:50[main] [JdbcTypeRegistry:74] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-08-28 23:07:50[main] [JdbcTypeRegistry:74] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-08-28 23:07:50[main] [JdbcTypeRegistry:74] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-08-28 23:07:50[main] [JdbcTypeRegistry:74] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 23:07:50[main] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 23:07:50[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@222d9d4f
DEBUG 24-08-28 23:07:50[main] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@165614f5`
DEBUG 24-08-28 23:07:50[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:07:50[main] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:07:50[main] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:07:50[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:07:50[main] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:07:50[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:07:50[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:07:50[main] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:07:50[main] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:07:50[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:07:50[main] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:07:50[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:07:50[main] [TypeConfiguration$Scope:196] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15f519f7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4a336377]
INFO  24-08-28 23:07:51[main] [JtaPlatformInitiator:59] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-08-28 23:07:51[main] [TypeConfiguration$Scope:208] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15f519f7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@12765ebd]
TRACE 24-08-28 23:07:51[main] [TypeConfiguration$Scope:272] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@12765ebd] for TypeConfiguration
INFO  24-08-28 23:07:51[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  24-08-28 23:07:51[main] [client:71] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.1.1"}, "platform": "Java/Oracle Corporation/17.0.9+11-LTS-201"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1ce8084a, com.mongodb.Jep395RecordCodecProvider@61d24347, com.mongodb.KotlinCodecProvider@347f8029]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
INFO  24-08-28 23:07:51[cluster-ClusterId{value='66cf2f379287130748924c31', description='null'}-localhost:27017] [cluster:71] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21614517}
WARN  24-08-28 23:07:51[main] [JpaBaseConfiguration$JpaWebConfiguration:236] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-08-28 23:07:52[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 23:07:52[main] [TomcatWebServer:243] - Tomcat started on port 8080 (http) with context path '/'
INFO  24-08-28 23:07:52[main] [ExprmntApplication:56] - Started ExprmntApplication in 5.283 seconds (process running for 5.806)
INFO  24-08-28 23:08:04[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-08-28 23:08:04[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-08-28 23:08:04[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 1 ms
DEBUG 24-08-28 23:08:04[http-nio-8080-exec-1] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1641936684<open>)] for JPA transaction
DEBUG 24-08-28 23:08:04[http-nio-8080-exec-1] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:08:04[http-nio-8080-exec-1] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@60ee4c63]
DEBUG 24-08-28 23:08:04[http-nio-8080-exec-1] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:08:04[http-nio-8080-exec-1] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(1641936684<open>)]
DEBUG 24-08-28 23:08:04[http-nio-8080-exec-1] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
INFO  24-08-28 23:08:49[main] [ExprmntApplication:50] - Starting ExprmntApplication using Java 17.0.9 with PID 10101 (/Users/test/Desktop/test/exprmnt/build/classes/java/main started by test in /Users/test/Desktop/test/exprmnt)
INFO  24-08-28 23:08:49[main] [ExprmntApplication:654] - No active profile set, falling back to 1 default profile: "default"
INFO  24-08-28 23:08:50[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 23:08:50[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-08-28 23:08:50[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  24-08-28 23:08:50[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 74 ms. Found 1 JPA repository interface.
INFO  24-08-28 23:08:50[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 23:08:50[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
INFO  24-08-28 23:08:50[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestRdbRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
INFO  24-08-28 23:08:50[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
INFO  24-08-28 23:08:52[main] [TomcatWebServer:111] - Tomcat initialized with port 8080 (http)
INFO  24-08-28 23:08:52[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 23:08:52[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-08-28 23:08:52[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.28]
INFO  24-08-28 23:08:52[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-08-28 23:08:52[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 2912 ms
INFO  24-08-28 23:08:52[main] [HikariDataSource:109] - HikariPool-1 - Starting...
INFO  24-08-28 23:08:53[main] [HikariPool:554] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@55c57422
INFO  24-08-28 23:08:53[main] [HikariDataSource:122] - HikariPool-1 - Start completed.
INFO  24-08-28 23:08:53[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-08-28 23:08:53[main] [Version:44] - HHH000412: Hibernate ORM core version 6.5.2.Final
INFO  24-08-28 23:08:53[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6b2aafbc
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6b2aafbc
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@1537e43
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1537e43
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@5bf4764d
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@71789580
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@23ee2ccf
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@165614f5
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6e685e6c
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5b0902b4
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@9d3d54e
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2f04993d
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@333398f
INFO  24-08-28 23:08:53[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 24-08-28 23:08:53[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3f1158ee) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6463da36)
DEBUG 24-08-28 23:08:53[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a4b288a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c6ac73c)
DEBUG 24-08-28 23:08:53[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29892a77) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5341e71a)
DEBUG 24-08-28 23:08:53[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@405d8a80) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ac4e690)
DEBUG 24-08-28 23:08:53[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6afeaf2d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@365bfc5f)
DEBUG 24-08-28 23:08:53[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a7e799e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37a3ec27)
DEBUG 24-08-28 23:08:53[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@283baa39) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@416b1265)
DEBUG 24-08-28 23:08:53[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2830315f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@da22aa)
DEBUG 24-08-28 23:08:53[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@75452aea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6c24f61d)
DEBUG 24-08-28 23:08:53[main] [JdbcTypeRegistry:74] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-08-28 23:08:53[main] [JdbcTypeRegistry:74] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-08-28 23:08:53[main] [JdbcTypeRegistry:74] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-08-28 23:08:53[main] [JdbcTypeRegistry:74] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 23:08:53[main] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@369ad7da
DEBUG 24-08-28 23:08:53[main] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5bf4764d`
DEBUG 24-08-28 23:08:54[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:08:54[main] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:08:54[main] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:08:54[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:08:54[main] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:08:54[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:08:54[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:08:54[main] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:08:54[main] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:08:54[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:08:54[main] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:08:54[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:08:54[main] [TypeConfiguration$Scope:196] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@43d3995f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2211b44f]
INFO  24-08-28 23:08:54[main] [JtaPlatformInitiator:59] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-08-28 23:08:54[main] [TypeConfiguration$Scope:208] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@43d3995f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3966c679]
TRACE 24-08-28 23:08:54[main] [TypeConfiguration$Scope:272] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3966c679] for TypeConfiguration
INFO  24-08-28 23:08:54[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  24-08-28 23:08:55[main] [client:71] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.1.1"}, "platform": "Java/Oracle Corporation/17.0.9+11-LTS-201"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@267b678f, com.mongodb.Jep395RecordCodecProvider@4803bf73, com.mongodb.KotlinCodecProvider@13731ff4]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
INFO  24-08-28 23:08:55[cluster-ClusterId{value='66cf2f77f03a3e4e31a801db', description='null'}-localhost:27017] [cluster:71] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20676274}
WARN  24-08-28 23:08:55[main] [JpaBaseConfiguration$JpaWebConfiguration:236] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-08-28 23:08:55[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 23:08:55[main] [TomcatWebServer:243] - Tomcat started on port 8080 (http) with context path '/'
INFO  24-08-28 23:08:55[main] [ExprmntApplication:56] - Started ExprmntApplication in 7.023 seconds (process running for 7.586)
INFO  24-08-28 23:09:01[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-08-28 23:09:01[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-08-28 23:09:01[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 1 ms
DEBUG 24-08-28 23:09:01[http-nio-8080-exec-1] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1377940279<open>)] for JPA transaction
DEBUG 24-08-28 23:09:01[http-nio-8080-exec-1] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:09:01[http-nio-8080-exec-1] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@27262c74]
DEBUG 24-08-28 23:09:01[http-nio-8080-exec-1] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:09:01[http-nio-8080-exec-1] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(1377940279<open>)]
DEBUG 24-08-28 23:09:01[http-nio-8080-exec-1] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-08-28 23:09:02[http-nio-8080-exec-2] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(2107268739<open>)] for JPA transaction
DEBUG 24-08-28 23:09:02[http-nio-8080-exec-2] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:09:02[http-nio-8080-exec-2] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@735dbf40]
DEBUG 24-08-28 23:09:02[http-nio-8080-exec-2] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:09:02[http-nio-8080-exec-2] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(2107268739<open>)]
DEBUG 24-08-28 23:09:02[http-nio-8080-exec-2] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-08-28 23:09:02[http-nio-8080-exec-3] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(2077621502<open>)] for JPA transaction
DEBUG 24-08-28 23:09:02[http-nio-8080-exec-3] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:09:02[http-nio-8080-exec-3] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@75120df4]
DEBUG 24-08-28 23:09:02[http-nio-8080-exec-3] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:09:02[http-nio-8080-exec-3] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(2077621502<open>)]
DEBUG 24-08-28 23:09:02[http-nio-8080-exec-3] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-4] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1584058605<open>)] for JPA transaction
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-4] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-4] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@50ad2550]
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-4] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-4] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(1584058605<open>)]
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-4] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-5] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(394324689<open>)] for JPA transaction
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-5] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-5] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@19471651]
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-5] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-5] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(394324689<open>)]
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-5] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-6] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1944537646<open>)] for JPA transaction
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-6] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-6] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3c1da019]
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-6] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-6] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(1944537646<open>)]
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-6] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-7] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(2101095197<open>)] for JPA transaction
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-7] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-7] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@73fbdaca]
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-7] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-7] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(2101095197<open>)]
DEBUG 24-08-28 23:09:03[http-nio-8080-exec-7] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
INFO  24-08-28 23:09:30[main] [ExprmntApplication:50] - Starting ExprmntApplication using Java 17.0.9 with PID 10121 (/Users/test/Desktop/test/exprmnt/build/classes/java/main started by test in /Users/test/Desktop/test/exprmnt)
INFO  24-08-28 23:09:30[main] [ExprmntApplication:654] - No active profile set, falling back to 1 default profile: "default"
INFO  24-08-28 23:09:31[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 23:09:31[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-08-28 23:09:31[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  24-08-28 23:09:31[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 63 ms. Found 1 JPA repository interface.
INFO  24-08-28 23:09:31[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 23:09:31[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
INFO  24-08-28 23:09:31[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestRdbRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
INFO  24-08-28 23:09:31[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 13 ms. Found 1 MongoDB repository interface.
INFO  24-08-28 23:09:32[main] [TomcatWebServer:111] - Tomcat initialized with port 8080 (http)
INFO  24-08-28 23:09:32[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 23:09:32[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-08-28 23:09:32[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.28]
INFO  24-08-28 23:09:32[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-08-28 23:09:32[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1922 ms
INFO  24-08-28 23:09:32[main] [HikariDataSource:109] - HikariPool-1 - Starting...
INFO  24-08-28 23:09:32[main] [HikariPool:554] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@76f2dad9
INFO  24-08-28 23:09:32[main] [HikariDataSource:122] - HikariPool-1 - Start completed.
INFO  24-08-28 23:09:32[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-08-28 23:09:32[main] [Version:44] - HHH000412: Hibernate ORM core version 6.5.2.Final
INFO  24-08-28 23:09:32[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@781654f8
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2abc55c4
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@70f148dc
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70f148dc
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@7708b66a
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@433ef204
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4dd2ef54
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@795b66d
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@359ceb13
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1068176
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5bf4764d
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@71789580
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@23ee2ccf
INFO  24-08-28 23:09:33[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 24-08-28 23:09:33[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@580c17a0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29d2fa84)
DEBUG 24-08-28 23:09:33[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4540c7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13c90c06)
DEBUG 24-08-28 23:09:33[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2bc0b8c8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@15f861ee)
DEBUG 24-08-28 23:09:33[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3f1158ee) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6463da36)
DEBUG 24-08-28 23:09:33[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4a4b288a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c6ac73c)
DEBUG 24-08-28 23:09:33[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29892a77) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5341e71a)
DEBUG 24-08-28 23:09:33[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@405d8a80) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ac4e690)
DEBUG 24-08-28 23:09:33[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6afeaf2d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@365bfc5f)
DEBUG 24-08-28 23:09:33[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a7e799e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37a3ec27)
DEBUG 24-08-28 23:09:33[main] [JdbcTypeRegistry:74] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-08-28 23:09:33[main] [JdbcTypeRegistry:74] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-08-28 23:09:33[main] [JdbcTypeRegistry:74] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-08-28 23:09:33[main] [JdbcTypeRegistry:74] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 23:09:33[main] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@59127611
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7708b66a`
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:09:33[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:09:33[main] [TypeConfiguration$Scope:196] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@28fa541] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5a82bc58]
INFO  24-08-28 23:09:34[main] [JtaPlatformInitiator:59] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-08-28 23:09:34[main] [TypeConfiguration$Scope:208] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@28fa541] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@21579b35]
TRACE 24-08-28 23:09:34[main] [TypeConfiguration$Scope:272] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@21579b35] for TypeConfiguration
INFO  24-08-28 23:09:34[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  24-08-28 23:09:34[main] [client:71] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.1.1"}, "platform": "Java/Oracle Corporation/17.0.9+11-LTS-201"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@384f0e32, com.mongodb.Jep395RecordCodecProvider@4e826fd4, com.mongodb.KotlinCodecProvider@5f14590c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
INFO  24-08-28 23:09:34[cluster-ClusterId{value='66cf2f9e27db927277d941d4', description='null'}-localhost:27017] [cluster:71] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=30598246}
WARN  24-08-28 23:09:35[main] [JpaBaseConfiguration$JpaWebConfiguration:236] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-08-28 23:09:35[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 23:09:35[main] [TomcatWebServer:243] - Tomcat started on port 8080 (http) with context path '/'
INFO  24-08-28 23:09:35[main] [ExprmntApplication:56] - Started ExprmntApplication in 5.824 seconds (process running for 6.271)
INFO  24-08-28 23:09:45[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-08-28 23:09:45[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-08-28 23:09:45[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 2 ms
DEBUG 24-08-28 23:09:45[http-nio-8080-exec-1] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1377940279<open>)] for JPA transaction
DEBUG 24-08-28 23:09:45[http-nio-8080-exec-1] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:09:45[http-nio-8080-exec-1] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@27262c74]
DEBUG 24-08-28 23:09:45[http-nio-8080-exec-1] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:09:45[http-nio-8080-exec-1] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(1377940279<open>)]
DEBUG 24-08-28 23:09:45[http-nio-8080-exec-1] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-08-28 23:09:46[http-nio-8080-exec-2] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(2107268739<open>)] for JPA transaction
DEBUG 24-08-28 23:09:46[http-nio-8080-exec-2] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:09:46[http-nio-8080-exec-2] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@735dbf40]
DEBUG 24-08-28 23:09:46[http-nio-8080-exec-2] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:09:46[http-nio-8080-exec-2] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(2107268739<open>)]
DEBUG 24-08-28 23:09:46[http-nio-8080-exec-2] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-3] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(2077621502<open>)] for JPA transaction
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-3] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-3] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@75120df4]
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-3] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-3] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(2077621502<open>)]
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-3] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-4] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1584058605<open>)] for JPA transaction
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-4] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-4] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@50ad2550]
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-4] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-4] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(1584058605<open>)]
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-4] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-5] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(394324689<open>)] for JPA transaction
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-5] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-5] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@19471651]
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-5] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-5] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(394324689<open>)]
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-5] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-6] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1944537646<open>)] for JPA transaction
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-6] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-6] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3c1da019]
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-6] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-6] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(1944537646<open>)]
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-6] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-7] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(2101095197<open>)] for JPA transaction
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-7] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-7] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@73fbdaca]
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-7] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-7] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(2101095197<open>)]
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-7] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-8] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(997319176<open>)] for JPA transaction
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-8] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-8] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@748b012d]
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-8] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-8] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(997319176<open>)]
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-8] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-9] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(134779262<open>)] for JPA transaction
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-9] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-9] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6cf7e0f]
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-9] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-9] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(134779262<open>)]
DEBUG 24-08-28 23:09:47[http-nio-8080-exec-9] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-08-28 23:09:48[http-nio-8080-exec-10] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1360219864<open>)] for JPA transaction
DEBUG 24-08-28 23:09:48[http-nio-8080-exec-10] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:09:48[http-nio-8080-exec-10] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5fd4aa8a]
DEBUG 24-08-28 23:09:48[http-nio-8080-exec-10] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:09:48[http-nio-8080-exec-10] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(1360219864<open>)]
DEBUG 24-08-28 23:09:48[http-nio-8080-exec-10] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-08-28 23:09:48[http-nio-8080-exec-1] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(1666705003<open>)] for JPA transaction
DEBUG 24-08-28 23:09:48[http-nio-8080-exec-1] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:09:48[http-nio-8080-exec-1] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3b19bfd7]
DEBUG 24-08-28 23:09:48[http-nio-8080-exec-1] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:09:48[http-nio-8080-exec-1] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(1666705003<open>)]
DEBUG 24-08-28 23:09:48[http-nio-8080-exec-1] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
INFO  24-08-28 23:10:47[main] [ExprmntApplication:50] - Starting ExprmntApplication using Java 17.0.9 with PID 10141 (/Users/test/Desktop/test/exprmnt/build/classes/java/main started by test in /Users/test/Desktop/test/exprmnt)
INFO  24-08-28 23:10:47[main] [ExprmntApplication:654] - No active profile set, falling back to 1 default profile: "default"
INFO  24-08-28 23:10:48[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 23:10:48[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-08-28 23:10:48[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  24-08-28 23:10:48[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 61 ms. Found 1 JPA repository interface.
INFO  24-08-28 23:10:48[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 23:10:48[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
INFO  24-08-28 23:10:48[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestRdbRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
INFO  24-08-28 23:10:48[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 9 ms. Found 1 MongoDB repository interface.
INFO  24-08-28 23:10:49[main] [TomcatWebServer:111] - Tomcat initialized with port 8080 (http)
INFO  24-08-28 23:10:49[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 23:10:49[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-08-28 23:10:49[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.28]
INFO  24-08-28 23:10:49[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-08-28 23:10:49[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1801 ms
INFO  24-08-28 23:10:49[main] [HikariDataSource:109] - HikariPool-1 - Starting...
INFO  24-08-28 23:10:49[main] [HikariPool:554] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@63fd4dda
INFO  24-08-28 23:10:49[main] [HikariDataSource:122] - HikariPool-1 - Start completed.
INFO  24-08-28 23:10:49[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-08-28 23:10:49[main] [Version:44] - HHH000412: Hibernate ORM core version 6.5.2.Final
INFO  24-08-28 23:10:49[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6b2aafbc
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6b2aafbc
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3b57dba4
DEBUG 24-08-28 23:10:49[main] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@35f7969d
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@1304e0d7
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1304e0d7
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@23ee2ccf
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@165614f5
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6e685e6c
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5b0902b4
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@9d3d54e
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2f04993d
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@333398f
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@103c97ff
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7d25913
INFO  24-08-28 23:10:50[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 24-08-28 23:10:50[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a4b288a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c6ac73c)
DEBUG 24-08-28 23:10:50[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29892a77) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5341e71a)
DEBUG 24-08-28 23:10:50[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@405d8a80) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ac4e690)
DEBUG 24-08-28 23:10:50[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6afeaf2d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@365bfc5f)
DEBUG 24-08-28 23:10:50[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a7e799e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37a3ec27)
DEBUG 24-08-28 23:10:50[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@283baa39) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@416b1265)
DEBUG 24-08-28 23:10:50[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2830315f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@da22aa)
DEBUG 24-08-28 23:10:50[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@75452aea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6c24f61d)
DEBUG 24-08-28 23:10:50[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4537880f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@14292d71)
DEBUG 24-08-28 23:10:50[main] [JdbcTypeRegistry:74] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-08-28 23:10:50[main] [JdbcTypeRegistry:74] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-08-28 23:10:50[main] [JdbcTypeRegistry:74] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-08-28 23:10:50[main] [JdbcTypeRegistry:74] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 23:10:50[main] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@3e98b933
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@23ee2ccf`
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:10:50[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:10:50[main] [TypeConfiguration$Scope:196] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6c830ebd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@15f519f7]
INFO  24-08-28 23:10:51[main] [JtaPlatformInitiator:59] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-08-28 23:10:51[main] [TypeConfiguration$Scope:208] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6c830ebd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@21f479cd]
TRACE 24-08-28 23:10:51[main] [TypeConfiguration$Scope:272] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@21f479cd] for TypeConfiguration
INFO  24-08-28 23:10:51[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  24-08-28 23:10:51[main] [client:71] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.1.1"}, "platform": "Java/Oracle Corporation/17.0.9+11-LTS-201"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@18918d70, com.mongodb.Jep395RecordCodecProvider@5d373794, com.mongodb.KotlinCodecProvider@7304ca87]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
INFO  24-08-28 23:10:51[cluster-ClusterId{value='66cf2feb5f689e1f0dda36eb', description='null'}-localhost:27017] [cluster:71] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=22407181}
WARN  24-08-28 23:10:51[main] [JpaBaseConfiguration$JpaWebConfiguration:236] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-08-28 23:10:52[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 23:10:52[main] [TomcatWebServer:243] - Tomcat started on port 8080 (http) with context path '/'
INFO  24-08-28 23:10:52[main] [ExprmntApplication:56] - Started ExprmntApplication in 5.676 seconds (process running for 6.167)
INFO  24-08-28 23:10:55[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-08-28 23:10:55[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-08-28 23:10:55[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 1 ms
DEBUG 24-08-28 23:10:55[http-nio-8080-exec-1] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(890841173<open>)] for JPA transaction
DEBUG 24-08-28 23:10:55[http-nio-8080-exec-1] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:10:55[http-nio-8080-exec-1] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1439cd9b]
DEBUG 24-08-28 23:10:55[http-nio-8080-exec-1] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:10:55[http-nio-8080-exec-1] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(890841173<open>)]
DEBUG 24-08-28 23:10:55[http-nio-8080-exec-1] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
DEBUG 24-08-28 23:10:59[http-nio-8080-exec-2] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(563845394<open>)] for JPA transaction
DEBUG 24-08-28 23:10:59[http-nio-8080-exec-2] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:10:59[http-nio-8080-exec-2] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2f5c7351]
DEBUG 24-08-28 23:11:00[http-nio-8080-exec-2] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:11:00[http-nio-8080-exec-2] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(563845394<open>)]
DEBUG 24-08-28 23:11:00[http-nio-8080-exec-2] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
INFO  24-08-28 23:11:20[main] [ExprmntApplication:50] - Starting ExprmntApplication using Java 17.0.9 with PID 10158 (/Users/test/Desktop/test/exprmnt/build/classes/java/main started by test in /Users/test/Desktop/test/exprmnt)
INFO  24-08-28 23:11:20[main] [ExprmntApplication:654] - No active profile set, falling back to 1 default profile: "default"
INFO  24-08-28 23:11:21[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 23:11:21[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-08-28 23:11:21[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  24-08-28 23:11:21[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 59 ms. Found 1 JPA repository interface.
INFO  24-08-28 23:11:21[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 23:11:21[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
INFO  24-08-28 23:11:21[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestRdbRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
INFO  24-08-28 23:11:21[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 12 ms. Found 1 MongoDB repository interface.
INFO  24-08-28 23:11:22[main] [TomcatWebServer:111] - Tomcat initialized with port 8080 (http)
INFO  24-08-28 23:11:22[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 23:11:22[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-08-28 23:11:22[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.28]
INFO  24-08-28 23:11:22[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-08-28 23:11:22[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1620 ms
INFO  24-08-28 23:11:22[main] [HikariDataSource:109] - HikariPool-1 - Starting...
INFO  24-08-28 23:11:22[main] [HikariPool:554] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5d5c41e5
INFO  24-08-28 23:11:22[main] [HikariDataSource:122] - HikariPool-1 - Start completed.
INFO  24-08-28 23:11:22[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-08-28 23:11:22[main] [Version:44] - HHH000412: Hibernate ORM core version 6.5.2.Final
INFO  24-08-28 23:11:22[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@56cfe6be
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7f0d8eff
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@149aa7b2
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3ca3648
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2a99ca99
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@39f0c343
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4e958f08
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@71c0b742
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3bbb8c16
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@73e1ecd0
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@11eec06b
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@65600fb3
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@25ce435
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7ea71fc2
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@19ad75e5
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7cd5fcf4
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@19cdc217
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5f5297e3
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@62ea8931
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@437281c5
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@437281c5
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@573aeab2
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1304e0d7
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6ddc67d0
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7767bd4e
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7708b66a
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@433ef204
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4dd2ef54
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@795b66d
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@359ceb13
INFO  24-08-28 23:11:23[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 24-08-28 23:11:23[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@59d5c537) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5464b97c)
DEBUG 24-08-28 23:11:23[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3355168) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2f07930a)
DEBUG 24-08-28 23:11:23[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@580c17a0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29d2fa84)
DEBUG 24-08-28 23:11:23[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4540c7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13c90c06)
DEBUG 24-08-28 23:11:23[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2bc0b8c8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@15f861ee)
DEBUG 24-08-28 23:11:23[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3f1158ee) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6463da36)
DEBUG 24-08-28 23:11:23[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a4b288a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1c6ac73c)
DEBUG 24-08-28 23:11:23[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29892a77) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5341e71a)
DEBUG 24-08-28 23:11:23[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@405d8a80) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ac4e690)
DEBUG 24-08-28 23:11:23[main] [JdbcTypeRegistry:74] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-08-28 23:11:23[main] [JdbcTypeRegistry:74] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-08-28 23:11:23[main] [JdbcTypeRegistry:74] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-08-28 23:11:23[main] [JdbcTypeRegistry:74] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 23:11:23[main] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@11bdab37
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@573aeab2`
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:11:23[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:11:23[main] [TypeConfiguration$Scope:196] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@280ecc33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@57b1ec84]
INFO  24-08-28 23:11:24[main] [JtaPlatformInitiator:59] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-08-28 23:11:24[main] [TypeConfiguration$Scope:208] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@280ecc33] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6d0a4a22]
TRACE 24-08-28 23:11:24[main] [TypeConfiguration$Scope:272] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6d0a4a22] for TypeConfiguration
INFO  24-08-28 23:11:24[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  24-08-28 23:11:24[main] [client:71] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.1.1"}, "platform": "Java/Oracle Corporation/17.0.9+11-LTS-201"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@76eee0b1, com.mongodb.Jep395RecordCodecProvider@2119b989, com.mongodb.KotlinCodecProvider@73905dff]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
INFO  24-08-28 23:11:24[cluster-ClusterId{value='66cf300cd24b916a54b9c1a4', description='null'}-localhost:27017] [cluster:71] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=29073280}
WARN  24-08-28 23:11:25[main] [JpaBaseConfiguration$JpaWebConfiguration:236] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-08-28 23:11:25[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 23:11:25[main] [TomcatWebServer:243] - Tomcat started on port 8080 (http) with context path '/'
INFO  24-08-28 23:11:25[main] [ExprmntApplication:56] - Started ExprmntApplication in 5.458 seconds (process running for 6.129)
INFO  24-08-28 23:11:31[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-08-28 23:11:31[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-08-28 23:11:31[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 1 ms
DEBUG 24-08-28 23:11:31[http-nio-8080-exec-1] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(101471227<open>)] for JPA transaction
DEBUG 24-08-28 23:11:31[http-nio-8080-exec-1] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:11:31[http-nio-8080-exec-1] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@524609c5]
DEBUG 24-08-28 23:11:32[http-nio-8080-exec-1] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:11:32[http-nio-8080-exec-1] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(101471227<open>)]
DEBUG 24-08-28 23:11:32[http-nio-8080-exec-1] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
INFO  24-08-28 23:17:08[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-08-28 23:17:08[SpringApplicationShutdownHook] [TypeConfiguration$Scope:278] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6d0a4a22] for TypeConfiguration
DEBUG 24-08-28 23:17:08[SpringApplicationShutdownHook] [TypeConfiguration$Scope:575] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@41d32d4e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6d0a4a22]
INFO  24-08-28 23:17:08[SpringApplicationShutdownHook] [HikariDataSource:349] - HikariPool-1 - Shutdown initiated...
INFO  24-08-28 23:17:08[SpringApplicationShutdownHook] [HikariDataSource:351] - HikariPool-1 - Shutdown completed.
INFO  24-08-28 23:17:13[main] [ExprmntApplication:50] - Starting ExprmntApplication using Java 17.0.9 with PID 10259 (/Users/test/Desktop/test/exprmnt/build/classes/java/main started by test in /Users/test/Desktop/test/exprmnt)
INFO  24-08-28 23:17:13[main] [ExprmntApplication:654] - No active profile set, falling back to 1 default profile: "default"
INFO  24-08-28 23:17:14[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 23:17:14[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-08-28 23:17:14[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  24-08-28 23:17:14[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 47 ms. Found 1 JPA repository interface.
INFO  24-08-28 23:17:14[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 23:17:14[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
INFO  24-08-28 23:17:14[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestRdbRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
INFO  24-08-28 23:17:14[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 12 ms. Found 1 MongoDB repository interface.
INFO  24-08-28 23:17:14[main] [TomcatWebServer:111] - Tomcat initialized with port 8080 (http)
INFO  24-08-28 23:17:14[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 23:17:14[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-08-28 23:17:14[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.28]
INFO  24-08-28 23:17:14[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-08-28 23:17:14[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1330 ms
INFO  24-08-28 23:17:14[main] [HikariDataSource:109] - HikariPool-1 - Starting...
INFO  24-08-28 23:17:15[main] [HikariPool:554] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1283ca23
INFO  24-08-28 23:17:15[main] [HikariDataSource:122] - HikariPool-1 - Start completed.
INFO  24-08-28 23:17:15[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-08-28 23:17:15[main] [Version:44] - HHH000412: Hibernate ORM core version 6.5.2.Final
INFO  24-08-28 23:17:15[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2d22d3b1
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@47fb7ec9
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6b2aafbc
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3b57dba4
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@35f7969d
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@35f7969d
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3404e5c4
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3404e5c4
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3404e5c4
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@47569167
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47569167
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@42d9e8d2
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@42d9e8d2
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4b93dd6a
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4b93dd6a
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@582a3b19
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@582a3b19
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@2b0454d2
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2b0454d2
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2616b618
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@73bb573d
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@1068176
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1068176
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@7d25913
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@c14e5a5
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@16f15ae9
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6206b4a7
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@77896335
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5c1b89ac
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@40a1b6d4
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@175581eb
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2b79c8ff
INFO  24-08-28 23:17:15[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 24-08-28 23:17:15[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a7e799e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@37a3ec27)
DEBUG 24-08-28 23:17:15[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@283baa39) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@416b1265)
DEBUG 24-08-28 23:17:15[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2830315f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@da22aa)
DEBUG 24-08-28 23:17:15[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@75452aea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6c24f61d)
DEBUG 24-08-28 23:17:15[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4537880f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@14292d71)
DEBUG 24-08-28 23:17:15[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@48e74764) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@338d47b)
DEBUG 24-08-28 23:17:15[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7a3643e3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2729bb71)
DEBUG 24-08-28 23:17:15[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@55071497) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@10d98940)
DEBUG 24-08-28 23:17:15[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@58b8f9e3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32a033b6)
DEBUG 24-08-28 23:17:15[main] [JdbcTypeRegistry:74] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-08-28 23:17:15[main] [JdbcTypeRegistry:74] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-08-28 23:17:15[main] [JdbcTypeRegistry:74] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-08-28 23:17:15[main] [JdbcTypeRegistry:74] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 23:17:15[main] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@18d610e1
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7d25913`
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:17:15[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:17:15[main] [TypeConfiguration$Scope:196] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@19d27c27] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6181bc4a]
INFO  24-08-28 23:17:16[main] [JtaPlatformInitiator:59] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-08-28 23:17:16[main] [TypeConfiguration$Scope:208] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@19d27c27] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6167c42f]
TRACE 24-08-28 23:17:16[main] [TypeConfiguration$Scope:272] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6167c42f] for TypeConfiguration
INFO  24-08-28 23:17:16[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  24-08-28 23:17:16[main] [client:71] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.1.1"}, "platform": "Java/Oracle Corporation/17.0.9+11-LTS-201"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@41f5389f, com.mongodb.Jep395RecordCodecProvider@3a012678, com.mongodb.KotlinCodecProvider@396c1228]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
INFO  24-08-28 23:17:16[cluster-ClusterId{value='66cf316cec873468ff52c94a', description='null'}-localhost:27017] [cluster:71] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21899467}
WARN  24-08-28 23:17:17[main] [JpaBaseConfiguration$JpaWebConfiguration:236] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-08-28 23:17:17[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 23:17:17[main] [TomcatWebServer:243] - Tomcat started on port 8080 (http) with context path '/'
INFO  24-08-28 23:17:17[main] [ExprmntApplication:56] - Started ExprmntApplication in 4.568 seconds (process running for 5.183)
INFO  24-08-28 23:17:24[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-08-28 23:17:24[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-08-28 23:17:24[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 1 ms
DEBUG 24-08-28 23:17:24[http-nio-8080-exec-1] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(695701669<open>)] for JPA transaction
DEBUG 24-08-28 23:17:24[http-nio-8080-exec-1] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:17:24[http-nio-8080-exec-1] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5e383009]
DEBUG 24-08-28 23:17:25[http-nio-8080-exec-1] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:17:25[http-nio-8080-exec-1] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(695701669<open>)]
DEBUG 24-08-28 23:17:25[http-nio-8080-exec-1] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
INFO  24-08-28 23:17:25[http-nio-8080-exec-1] [TestController:30] - >>>>>> [RDB] started at 1724854644854, ended at 1724854645932, total time taken = 1078
INFO  24-08-28 23:19:55[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:650] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 24-08-28 23:19:55[SpringApplicationShutdownHook] [TypeConfiguration$Scope:278] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6167c42f] for TypeConfiguration
DEBUG 24-08-28 23:19:55[SpringApplicationShutdownHook] [TypeConfiguration$Scope:575] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5a2f9959] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6167c42f]
INFO  24-08-28 23:19:55[SpringApplicationShutdownHook] [HikariDataSource:349] - HikariPool-1 - Shutdown initiated...
INFO  24-08-28 23:19:55[SpringApplicationShutdownHook] [HikariDataSource:351] - HikariPool-1 - Shutdown completed.
INFO  24-08-28 23:19:59[main] [ExprmntApplication:50] - Starting ExprmntApplication using Java 17.0.9 with PID 10316 (/Users/test/Desktop/test/exprmnt/build/classes/java/main started by test in /Users/test/Desktop/test/exprmnt)
INFO  24-08-28 23:19:59[main] [ExprmntApplication:654] - No active profile set, falling back to 1 default profile: "default"
INFO  24-08-28 23:19:59[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 23:19:59[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  24-08-28 23:19:59[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestMongoRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  24-08-28 23:19:59[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 66 ms. Found 1 JPA repository interface.
INFO  24-08-28 23:19:59[main] [RepositoryConfigurationDelegate:295] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  24-08-28 23:19:59[main] [RepositoryConfigurationDelegate:143] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
INFO  24-08-28 23:19:59[main] [RepositoryConfigurationExtensionSupport:320] - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.dbs.exprmnt.repository.TestRdbRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
INFO  24-08-28 23:19:59[main] [RepositoryConfigurationDelegate:211] - Finished Spring Data repository scanning in 10 ms. Found 1 MongoDB repository interface.
INFO  24-08-28 23:20:00[main] [TomcatWebServer:111] - Tomcat initialized with port 8080 (http)
INFO  24-08-28 23:20:00[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 23:20:00[main] [StandardService:173] - Starting service [Tomcat]
INFO  24-08-28 23:20:00[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/10.1.28]
INFO  24-08-28 23:20:00[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  24-08-28 23:20:00[main] [ServletWebServerApplicationContext:296] - Root WebApplicationContext: initialization completed in 1402 ms
INFO  24-08-28 23:20:00[main] [HikariDataSource:109] - HikariPool-1 - Starting...
INFO  24-08-28 23:20:00[main] [HikariPool:554] - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@740fefc6
INFO  24-08-28 23:20:00[main] [HikariDataSource:122] - HikariPool-1 - Start completed.
INFO  24-08-28 23:20:00[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  24-08-28 23:20:00[main] [Version:44] - HHH000412: Hibernate ORM core version 6.5.2.Final
INFO  24-08-28 23:20:00[main] [RegionFactoryInitiator:50] - HHH000026: Second-level cache disabled
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7ec3a8bd
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@9690008
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@42cf6349
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@79cb8ffa
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1a2e563e
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5b066c33
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2f8c4fae
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration image -> org.hibernate.type.BasicTypeReference@4703c998
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration blob -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@71166348
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6d874695
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@20bb85b4
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration short -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@79add732
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration int -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3be3e76c
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration long -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6c07ad6b
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration float -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@10ed037a
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration double -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@76e4212
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@23121d14
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@72af90e8
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration character -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration char -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@aa1bb14
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7faa0680
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration string -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4c635edc
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4245bf68
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration characters -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration [C -> org.hibernate.type.BasicTypeReference@45bbc52f
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6a8a551e
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration text -> org.hibernate.type.BasicTypeReference@3cc9632d
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@53982523
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration clob -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@489110c2
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@700b9e6b
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7ac5b4c
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@150fc7a7
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@55d8c2c4
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@798cf6d2
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1c1fa494
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@77c66a4f
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@649b5891
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7a3f08b6
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1be52861
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5fb5ad40
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@615439f7
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@632cf7d3
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@51b87df7
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2315052d
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@634e1b39
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@67d8faec
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@751d7425
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7eaa2bc6
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6dae70f9
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4d81e83a
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration date -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@53a301f3
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration time -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7cf8f45a
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@62cf6a84
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@204d9edf
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6b2aafbc
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@50cbcca7
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration instant -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@49491770
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5bec3e0
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3b57dba4
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@35f7969d
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration class -> org.hibernate.type.BasicTypeReference@3404e5c4
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3404e5c4
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration currency -> org.hibernate.type.BasicTypeReference@47569167
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@47569167
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@47569167
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration locale -> org.hibernate.type.BasicTypeReference@42d9e8d2
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@42d9e8d2
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4b93dd6a
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4b93dd6a
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@582a3b19
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@582a3b19
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2b0454d2
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2b0454d2
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration url -> org.hibernate.type.BasicTypeReference@2616b618
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2616b618
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration vector -> org.hibernate.type.BasicTypeReference@73bb573d
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7ac058a0
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:371] - Adding type registration object -> org.hibernate.type.JavaObjectType@5bf4764d
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:371] - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5bf4764d
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@c14e5a5
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@16f15ae9
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6206b4a7
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@77896335
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5c1b89ac
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@40a1b6d4
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@175581eb
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2b79c8ff
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:396] - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2baf72d5
INFO  24-08-28 23:20:01[main] [SpringPersistenceUnitInfo:87] - No LoadTimeWeaver setup: ignoring JPA class transformer
DEBUG 24-08-28 23:20:01[main] [DdlTypeRegistry:64] - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@37a3ec27) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@283baa39)
DEBUG 24-08-28 23:20:01[main] [DdlTypeRegistry:64] - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@416b1265) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2830315f)
DEBUG 24-08-28 23:20:01[main] [DdlTypeRegistry:64] - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@da22aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@75452aea)
DEBUG 24-08-28 23:20:01[main] [DdlTypeRegistry:64] - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6c24f61d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4537880f)
DEBUG 24-08-28 23:20:01[main] [DdlTypeRegistry:64] - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@14292d71) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@48e74764)
DEBUG 24-08-28 23:20:01[main] [DdlTypeRegistry:64] - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@338d47b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7a3643e3)
DEBUG 24-08-28 23:20:01[main] [DdlTypeRegistry:64] - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2729bb71) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55071497)
DEBUG 24-08-28 23:20:01[main] [DdlTypeRegistry:64] - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@10d98940) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58b8f9e3)
DEBUG 24-08-28 23:20:01[main] [DdlTypeRegistry:64] - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32a033b6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5f6e2ad9)
DEBUG 24-08-28 23:20:01[main] [JdbcTypeRegistry:74] - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
DEBUG 24-08-28 23:20:01[main] [JdbcTypeRegistry:74] - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
DEBUG 24-08-28 23:20:01[main] [JdbcTypeRegistry:74] - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
DEBUG 24-08-28 23:20:01[main] [JdbcTypeRegistry:74] - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 23:20:01[main] [JdbcTypeRegistry:82] - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:371] - Adding type registration null -> org.hibernate.type.NullType@528e5e38
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:375] - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@c14e5a5`
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:371] - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:371] - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:371] - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:371] - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:371] - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:371] - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:371] - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:20:01[main] [BasicTypeRegistry:371] - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
DEBUG 24-08-28 23:20:01[main] [TypeConfiguration$Scope:196] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6181bc4a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@70485aa]
INFO  24-08-28 23:20:02[main] [JtaPlatformInitiator:59] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
DEBUG 24-08-28 23:20:02[main] [TypeConfiguration$Scope:208] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6181bc4a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2cbc2db2]
TRACE 24-08-28 23:20:02[main] [TypeConfiguration$Scope:272] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2cbc2db2] for TypeConfiguration
INFO  24-08-28 23:20:02[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  24-08-28 23:20:02[main] [client:71] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.1.1"}, "platform": "Java/Oracle Corporation/17.0.9+11-LTS-201"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3a012678, com.mongodb.Jep395RecordCodecProvider@396c1228, com.mongodb.KotlinCodecProvider@1701beb3]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
INFO  24-08-28 23:20:02[cluster-ClusterId{value='66cf3212a90c894efc77f6ca', description='null'}-localhost:27017] [cluster:71] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=24290827}
WARN  24-08-28 23:20:03[main] [JpaBaseConfiguration$JpaWebConfiguration:236] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  24-08-28 23:20:03[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8080"]
INFO  24-08-28 23:20:03[main] [TomcatWebServer:243] - Tomcat started on port 8080 (http) with context path '/'
INFO  24-08-28 23:20:03[main] [ExprmntApplication:56] - Started ExprmntApplication in 4.975 seconds (process running for 5.413)
INFO  24-08-28 23:20:10[http-nio-8080-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  24-08-28 23:20:10[http-nio-8080-exec-1] [DispatcherServlet:532] - Initializing Servlet 'dispatcherServlet'
INFO  24-08-28 23:20:10[http-nio-8080-exec-1] [DispatcherServlet:554] - Completed initialization in 2 ms
INFO  24-08-28 23:20:13[http-nio-8080-exec-1] [TestController:47] - >>>>>> [MONGO] started at 1724854810925, ended at 1724854813237, total time taken = 2312
DEBUG 24-08-28 23:20:36[http-nio-8080-exec-3] [JpaTransactionManager:374] - Found thread-bound EntityManager [SessionImpl(824613738<open>)] for JPA transaction
DEBUG 24-08-28 23:20:36[http-nio-8080-exec-3] [JpaTransactionManager:402] - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG 24-08-28 23:20:36[http-nio-8080-exec-3] [JpaTransactionManager:439] - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@641e7be3]
DEBUG 24-08-28 23:20:37[http-nio-8080-exec-3] [JpaTransactionManager:790] - Initiating transaction commit
DEBUG 24-08-28 23:20:37[http-nio-8080-exec-3] [JpaTransactionManager:557] - Committing JPA transaction on EntityManager [SessionImpl(824613738<open>)]
DEBUG 24-08-28 23:20:37[http-nio-8080-exec-3] [JpaTransactionManager:657] - Not closing pre-bound JPA EntityManager after transaction
INFO  24-08-28 23:20:37[http-nio-8080-exec-3] [TestController:30] - >>>>>> [RDB] started at 1724854836616, ended at 1724854837761, total time taken = 1145
